* Clojure变量variable是内存中的一个storage location，可以被绑定到一个值value
* Clojure变量和[[Clojure符号]]的关系是什么？ #card #clojure
:PROPERTIES:
:card-last-interval: 4
:card-repeats: 2
:card-ease-factor: 2.7
:card-next-schedule: 2022-04-18T01:00:37.119Z
:card-last-reviewed: 2022-04-14T01:00:37.119Z
:card-last-score: 5
:END:
** 符号就是一个名字，在eval时，会在namespace里面查找(称为resolve)符号，找到对应的变量，然后把变量绑定的值作为符号的求值结果
* (var symbol)的意义是什么？ #card #clojure
:PROPERTIES:
:card-last-interval: 4
:card-repeats: 2
:card-ease-factor: 2.7
:card-next-schedule: 2022-04-18T00:58:39.477Z
:card-last-reviewed: 2022-04-14T00:58:39.477Z
:card-last-score: 5
:END:
** 返回symbol绑定的变量本身，也可以用#'symbol来表达
* 如何做Clojure变量的线程本地绑定？ #card #clojure
:PROPERTIES:
:card-last-interval: 4
:card-repeats: 2
:card-ease-factor: 2.46
:card-next-schedule: 2022-04-18T00:59:58.278Z
:card-last-reviewed: 2022-04-14T00:59:58.278Z
:card-last-score: 3
:END:
** #+BEGIN_SRC clojure
(def ^:dynamic x 1)
(def ^:dynamic y 1)
(+ x y)
;=> 2

(binding [x 2 y 3]
  (+ x y))
;=> 5

(+ x y)
;=> 2
#+END_SRC
* var可能有的四种状态都是什么？ #card #clojure
:PROPERTIES:
:card-last-interval: 5.74
:card-repeats: 1
:card-ease-factor: 2.6
:card-next-schedule: 2022-04-18T18:03:04.124Z
:card-last-reviewed: 2022-04-13T01:03:04.124Z
:card-last-score: 5
:END:
** |初始化| (resolve 'x) | (bound? #' x) | (thread-bound? #' x) |
| (def x) | 为#'user/x | false | false |
| (def x 5) | 为#'user/x | true | false |
| (binding [x 7] ...) | 为#'user/x | true | true |
| (with-local-vars [x 9] ...) | nil | true (bound? x) | true (thread-bound? x) |
**
**