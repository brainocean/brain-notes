* Clojure 如何 访问 Java 类的静态成员？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:12:53.433Z
:card-last-reviewed: 2022-04-19T01:12:53.434Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
java.util.Locale/JAPAN
;=> #<Locale ja_JP>

(Math/sqrt 9)
;=> 3.0
#+END_SRC
** 注意ClojureScript并无此特性，因为JavaScript没有静态成员的概念
* Clojure如何创建Java类的实例？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:11:44.039Z
:card-last-reviewed: 2022-04-19T01:11:44.039Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(java.util.HashMap. {"foo" 42 "bar" 9 "baz" "quux"})
;=> {"baz" "quux", "foo" 42, "bar" 9}
#+END_SRC
* Clojure如何读取Java实例属性的值？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:04:38.521Z
:card-last-reviewed: 2022-04-19T01:04:38.521Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(.-x (java.awt.Point. 10 20))
;=> 10

(.x (java.awt.Point. 10 20))
;=> 10
#+END_SRC
* Clojure如何设置Java实例属性的值？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:06:41.877Z
:card-last-reviewed: 2022-04-19T01:06:41.878Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(let [p (java.awt.Point. 10 20)] 
  (set! (.-x p) 15) 
  p)
;=> #object[java.awt.Point 0x6df7988f "java.awt.Point[x=15,y=20]"]
#+END_SRC
* Clojure如何访问Java实例的成员方法？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:13:00.560Z
:card-last-reviewed: 2022-04-19T01:13:00.561Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(.divide (java.math.BigDecimal. "42") 2M)
;=> 21M
#+END_SRC
* Clojure如何简化Java中的链式调用？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:07:53.837Z
:card-last-reviewed: 2022-04-19T01:07:53.837Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(.. (java.util.Date.) toString (endsWith "2014"))
;=> false
#+END_SRC
** 使用threading macro ->, ->>可以达到类似的效果
* Clojure中的doto宏如何使用？ #card #clojure
:PROPERTIES:
:card-last-interval: 33.64
:card-repeats: 4
:card-ease-factor: 2.9
:card-next-schedule: 2022-05-22T16:04:55.775Z
:card-last-reviewed: 2022-04-19T01:04:55.776Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(doto (java.util.HashMap.)
   (.put "HOME" "/home/me")
   (.put "SRC" "src")
   (.put "BIN" "classes"))
;=> {"HOME" "/home/me", "BIN" "classes", "SRC" "src"}
#+END_SRC