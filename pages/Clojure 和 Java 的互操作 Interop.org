* Clojure 如何 访问 Java 类的静态成员？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:31:13.570Z
:card-last-reviewed: 2022-04-07T01:31:13.570Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
java.util.Locale/JAPAN
;=> #<Locale ja_JP>

(Math/sqrt 9)
;=> 3.0
#+END_SRC
** 注意ClojureScript并无此特性，因为JavaScript没有静态成员的概念
* Clojure如何创建Java类的实例？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:29:29.075Z
:card-last-reviewed: 2022-04-07T01:29:29.075Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(java.util.HashMap. {"foo" 42 "bar" 9 "baz" "quux"})
;=> {"baz" "quux", "foo" 42, "bar" 9}
#+END_SRC
* Clojure如何读取Java实例属性的值？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:26:26.192Z
:card-last-reviewed: 2022-04-07T01:26:26.193Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(.-x (java.awt.Point. 10 20))
;=> 10

(.x (java.awt.Point. 10 20))
;=> 10
#+END_SRC
* Clojure如何设置Java实例属性的值？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:27:18.187Z
:card-last-reviewed: 2022-04-07T01:27:18.187Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(let [p (java.awt.Point. 10 20)] 
  (set! (.-x p) 15) 
  p)
;=> #object[java.awt.Point 0x6df7988f "java.awt.Point[x=15,y=20]"]
#+END_SRC
* Clojure如何访问Java实例的成员方法？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:31:30.295Z
:card-last-reviewed: 2022-04-07T01:31:30.295Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(.divide (java.math.BigDecimal. "42") 2M)
;=> 21M
#+END_SRC
* Clojure如何简化Java中的链式调用？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:29:07.451Z
:card-last-reviewed: 2022-04-07T01:29:07.451Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(.. (java.util.Date.) toString (endsWith "2014"))
;=> false
#+END_SRC
** 使用threading macro ->, ->>可以达到类似的效果
* Clojure中的doto宏如何使用？ #card #clojure
:PROPERTIES:
:card-last-interval: 11.2
:card-repeats: 3
:card-ease-factor: 2.8
:card-next-schedule: 2022-04-18T05:27:03.951Z
:card-last-reviewed: 2022-04-07T01:27:03.951Z
:card-last-score: 5
:END:
** #+BEGIN_SRC clojure
(doto (java.util.HashMap.)
   (.put "HOME" "/home/me")
   (.put "SRC" "src")
   (.put "BIN" "classes"))
;=> {"HOME" "/home/me", "BIN" "classes", "SRC" "src"}
#+END_SRC