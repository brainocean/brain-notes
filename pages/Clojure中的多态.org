* Clojure Protocols和Clojure Multimethods的区别和联系是什么？ #card #clojure
:PROPERTIES:
:card-last-interval: 12.09
:card-repeats: 3
:card-ease-factor: 2.72
:card-next-schedule: 2022-08-27T03:19:34.444Z
:card-last-reviewed: 2022-08-15T01:19:34.444Z
:card-last-score: 5
:END:
** Protocols和Multimethods都是用来实现[[多态]]的
** | Mltimethods | Protocols |
| 定义一个多态方法 | 集合多个多态方法 |
| 通过一个函数的返回值来确定分发的目标 | 根据 [[Clojure Datatype]] 分发 |
| 灵活性高 | 效率高 |
* 怎样实现一个Protocol？ #card #clojure
:PROPERTIES:
:card-last-interval: -1
:card-repeats: 1
:card-ease-factor: 3.2
:card-next-schedule: 2022-08-16T16:00:00.000Z
:card-last-reviewed: 2022-08-16T01:10:54.250Z
:card-last-score: 1
:END:
** | 方式 | 函数/宏 | 常用于 |
| extend | 函数 |  以type为关注点，实现一个或多个protocols  |
| extend-type | 宏 | 以type为关注点，实现一个或多个protocols |
| extend-protocol | 宏 | 以protocol为关注点，提供多个实现该protocol的types |
| deftype | 宏 | 在定义type的时候实现protocol |